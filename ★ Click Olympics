var scene = 'Kayaking';

textAlign(CENTER, CENTER);

/*
    fill(58, 152, 207);
    fill(207, 60, 87);
    fill(192, 207, 60);
    fill(60, 207, 104);
    
    events:
        running
        kayaking
        weightlifting
*/

// The rectangle collision function
var rectCollide = function(one, two){
    if( one.x+one.w > two.x &&
        one.y+one.h > two.y &&
        one.x < two.x+two.w &&
        one.y < two.y+two.h){
        return true;
    }
};

// Transition
var trans = {y: [500, 500, 500, 500], active: false, out: false, nextScene: 'Game'};

var Logo = function(){
    this.sz = 1;
    this.r = 360;
    
    this.y = 300;
    this.y2 = 300;
};
Logo.prototype.draw = function() {
    background(245);
    
    var logoColors = [
        color(58, 152, 207),
        color(207, 60, 87),
        color(192, 207, 60),
        color(60, 207, 104),
    ];
    
    pushMatrix();
    translate(width / 2, 170);
    scale(1 - this.sz);
    rotate(this.r);
    noFill();
    strokeCap(SQUARE);
    stroke(0, 0, 0, 30);
    strokeWeight(60);
    arc(0, 0, 170, 170, 20, 340);
    strokeWeight(11);
    // Outer layer
    stroke(logoColors[0]);
    arc(0, 0, 200, 200, -85, -30);
    arc(0, 0, 180, 180, -75, -30);
    arc(0, 0, 200, 200, -300, -240);
    arc(0, 0, 180, 180, -285, -250);
    stroke(logoColors[1]);
    arc(0, 0, 200, 200, -125, -85);
    arc(0, 0, 180, 180, -115, -75);
    arc(0, 0, 200, 200, -200, -160);
    arc(0, 0, 180, 180, -200, -150);
    stroke(logoColors[2]);
    arc(0, 0, 200, 200, -160, -125);
    arc(0, 0, 180, 180, -150, -116);
    arc(0, 0, 200, 200, -330, -300);
    arc(0, 0, 180, 180, -330, -286);
    stroke(logoColors[3]);
    arc(0, 0, 200, 200, -240, -200);
    arc(0, 0, 180, 180, -250, -200);
    
    // Inner layer
    stroke(logoColors[0]);
    arc(0, 0, 160, 160, -200, -160);
    arc(0, 0, 140, 140, -200, -150);
    stroke(logoColors[1]);
    arc(0, 0, 160, 160, -300, -240);
    arc(0, 0, 140, 140, -285, -250);
    stroke(logoColors[2]);
    arc(0, 0, 160, 160, -240, -200);
    arc(0, 0, 140, 140, -250, -200);
    arc(0, 0, 160, 160, -125, -85);
    arc(0, 0, 140, 140, -115, -75);
    stroke(logoColors[3]);
    arc(0, 0, 160, 160, -85, -30);
    arc(0, 0, 140, 140, -75, -30);
    arc(0, 0, 160, 160, -330, -300);
    arc(0, 0, 140, 140, -330, -286);
    arc(0, 0, 160, 160, -160, -125);
    arc(0, 0, 140, 140, -150, -116);
    
    stroke(0, 0, 0, 50);
    strokeWeight(20);
    arc(0, 0, 150, 150, 30, 330);
    popMatrix();
    
    fill(60);
    textFont(createFont('Century Gothic Bold'), 70);
    text('CHESTER', 200, 350 + this.y);
    textFont(createFont('Century Gothic'), 70);
    text('BANKS', 200, 415 + this.y2);
    
    this.r /= 1.1;
    this.sz /= 1.05;
    if(this.sz < 0.1){
        this.y /= 1.1;
    }
    if(this.y < 10){
        this.y2 /= 1.2;
    }
    if(this.y2 < 0.01){
        trans.active = true;
        trans.nextScene = 'Menu';
    }
};
var logo = new Logo();

var overButton = false;
var clicked = false;
mouseClicked = function(){ clicked = true; };
var keys = [];
keyPressed = function(){ keys[keyCode] = true; };
keyReleased = function(){ keys[keyCode] = false; };

var scores = [0, 0, 0, 0];

var Button = function(x, y, txt, nxt){
    this.x = x;
    this.y = y;
    this.txt = txt;
    this.nxt = nxt;
    
    this.plusW = 20;
};
Button.prototype.draw = function() {
    noFill();
    stroke(60);
    strokeWeight(2);
    ellipse(this.x, this.y, 140 - this.plusW, 140 - this.plusW);
    
    fill(60);
    textSize(30);
    text(this.txt, this.x, this.y);
    
    if(dist(mouseX, mouseY, this.x, this.y) < 70){
        overButton = true;
        this.plusW /= 1.5;
        if(clicked){
            trans.active = true;
            trans.nextScene = this.nxt;
        }
    } else {
        this.plusW *= 1.5;
    }
    
    this.plusW = constrain(this.plusW, 1, 20);
};
var Buttons = {
    start: new Button(200, 400, 'START', 'RunningIntro'),
    goRun: new Button(200, 400, 'OKAY!', 'Running'),
    goLift: new Button(200, 400, 'GOT IT!', 'Lifting'),
};

var Player = function(){
    this.x = 50;
    this.y = 370;
    this.w = 50;
    this.h = 50;
    this.jump = false;
    this.yvel = -13;
};
Player.prototype.draw = function() {
    pushMatrix();
    translate(this.x, this.y);
    //stroke(245, 245, 245, 200);
    fill(58, 152, 207);
    rect(0, 0, 50, 50, 10);
    noStroke();
    fill(245);
    ellipse(20, 30, 20, 20);
    ellipse(40, 30, 15, 15);
    fill(60);
    ellipse(22, 30, 15, 15);
    ellipse(42, 30, 10, 10);
    popMatrix();
    
    if(clicked){
        this.jump = true;
    }
    if(this.jump){
        this.y += this.yvel;
        this.yvel += 0.5;
        if(this.y > 370){
            this.y = 370;
            this.yvel = -13;
            this.jump = false;
        }
    }
};
var player = new Player();

var Hurdle = function(){
    this.x = 550;
    this.y = 332;
    this.w = 50;
    this.h = 100;
};
Hurdle.prototype.draw = function() {
    pushMatrix();
    translate(this.x, this.y);
    fill(60);
    rect(0, 0, 5, 60);
    rect(50, 0, 5, 103);
    rect(0, 0, 50, 21);
    popMatrix();
    
    this.x -= 5;
    
    if(rectCollide(this, player)){
        trans.active = true;
        trans.nextScene = 'LiftingIntro';
    }
};
var Hurdles = [];

var Kayak = function(){
    this.x = 185;
    this.y = 360;
    this.w = 35;
    this.h = 110;
    this.xvel = 0;
    this.yvel = 0;
    
    this.wake = function(x, y, angle){
        this.x = x;
        this.y = y;
        this.sz = 29;
        this.angle = angle;
        
        this.trans = 50;
    };
    this.wakes = [];
    this.wake.prototype.draw = function() {
        noStroke();
        pushMatrix();
        translate(this.x, this.y);
        rotate(this.angle);
        fill(255, 255, 255, this.trans);
        ellipse(-5, 0, 30 - this.sz, 30 - this.sz);
        ellipse(5, 0, 30 - this.sz, 30 - this.sz);
        popMatrix();
        
        this.sz /= 1.1;
        
        this.trans -= 1;
    };
};
Kayak.prototype.draw = function() {
    if(keyIsPressed){
        this.wakes.push(new this.wake(this.x + this.w / 2, this.y + this.h, this.xvel));
    }
    
    for(var i in this.wakes){
        this.wakes[i].draw();
        if(this.wakes[i].trans < 0){
            this.wakes.splice(i, 1);
        }
    }
    
    strokeWeight(3);
    fill(242, 154, 39);
    stroke(196, 119, 24);
    pushMatrix();
    translate(this.x + this.w / 2, this.y + this.h / 2);
    rotate(this.xvel * 5);
    //scale(3);
    beginShape();
    vertex(0, 55);
    bezierVertex(-27, 53, -20, -30, 0, -50);
    bezierVertex(20, -30, 27, 53, 0, 55);
    endShape();
    noStroke();
    
    fill(255, 255, 255,50);
    beginShape();
    vertex(0, 35);
    bezierVertex(-27, 33, -20, -30, 0, -50);
    bezierVertex(20, -30, 27, 31, 0, 36);
    endShape();
    
    stroke(255);
    bezier(-9, -17, -9, -21, -7, -25, -4, -32);
    point(-3, -37);
    
    fill(130, 130, 130);
    ellipse(0, 8, 21, 30);
    stroke(150, 150, 150);
    for(var i = -4; i < 23; i += 5){
        if(i < -3 || i > 20){
            line(-4, i, 5, i);
        } else {
            line(-9, i, 9, i);
        }
    }
    
    noFill();
    stroke(196, 119, 24);
    beginShape();
    vertex(0, 55);
    bezierVertex(-27, 53, -20, -30, 0, -50);
    bezierVertex(20, -30, 27, 53, 0, 55);
    endShape();
    
    ellipse(0, 8, 21, 30);
    
    strokeWeight(1);
    stroke(138, 138, 138);
    line(-8, 33, 8, 33);
    line(-4, 38, 8, 33);
    line(-4, 38, 5, 41);
    line(-3, 44, 5, 41);
    line(-3, 44, 5, 44);
    line(-3, 41, 5, 44);
    line(-3, 41, 5, 38);
    line(-8, 33, 5, 38);
    strokeWeight(2);
    stroke(100);
    point(-8, 33);
    point(8, 33);
    point(5, 38);
    point(-4, 38);
    point(-3, 41);
    point(5, 41);
    point(5, 44);
    point(-3, 44);
    popMatrix();
    
    
    if(keys[LEFT]){
        this.xvel -= 0.5;
    }
    if(keys[RIGHT]){
        this.xvel += 0.5;
    }
    if(!keys[LEFT] && !keys[RIGHT]){
        this.xvel /= 1.1;
    }
    this.xvel = constrain(this.xvel, -3, 3);
    this.x += this.xvel;
    
    if(keys[UP]){
        this.yvel -= 0.5;
    }
    if(keys[DOWN]){
        this.yvel += 0.5;
    }
    if(!keys[UP] && !keys[DOWN]){
        this.yvel /= 1.1;
    }
    this.yvel = constrain(this.yvel, -3, 3);
    this.y += this.yvel;
};
var kayak = new Kayak();

var Rock = function(){
    this.x = random(30, 370);
    this.y = -50;
    this.w = 30;
    this.h = 30;
    this.speed = random(2, 4);
};
Rock.prototype.draw = function() {
    pushMatrix();
    translate(this.x + this.w / 2, this.y + this.h / 2);
    stroke(122, 122, 122);
    fill(161, 161, 161);
    beginShape();
    vertex(-9, 15);
    vertex(-15, -3);
    vertex(-12, -13);
    vertex(-3, -16);
    vertex(14, -11);
    vertex(17, -1);
    vertex(13, 10);
    endShape();
    noStroke();
    fill(0, 0, 0, 30);
    beginShape();
    vertex(-9, 15);
    vertex(-2, 1);
    vertex(10, -2);
    vertex(8, -11);
    vertex(14, -11);
    vertex(17, -1);
    vertex(13, 10);
    endShape();
    noFill();
    stroke(133, 217, 242);
    bezier(-18, 19, -5, 15, 13, 0, 22, 21);
    popMatrix();
    
    this.y += this.speed;
};
var Rocks = [];
var rockRate = 60;

draw = function() {
    if(scene === 'Logo'){
        logo.draw();
    }
    if(scene === 'Menu'){
        background(245);
        
        fill(60);
        textFont(createFont('Century Gothic Bold'), 100);
        text('CLICK', 200, 200);
        textFont(createFont('Century Gothic'), 61);
        text('OLYMPICS', 200, 265);
        textFont(createFont('Century Gothic Italic'), 12);
        text('A L L   Y O U   N E E D   I S   Y O U R   M O U S E', 200, 305);
        
        noStroke();
        fill(58, 152, 207);
        triangle(0, 0, 50, 0, 0, 50);
        fill(207, 60, 87);
        triangle(0, 500, 0, 450, 50, 500);
        fill(192, 207, 60);
        triangle(400, 500, 400, 450, 350, 500);
        fill(60, 207, 104);
        triangle(400, 0, 350, 0, 400, 50);
        
        Buttons.start.draw();
    }
    if(scene === 'RunningIntro'){
        background(245);
        
        noStroke();
        fill(58, 152, 207);
        rect(10, 190, 380, 50);
        
        textFont(createFont('Century Gothic Bold'), 50);
        fill(245);
        text('RUNNING', 200, 215);
        fill(58, 152, 207);
        textSize(25);
        text('R O U N D   O N E', 200, 180);
        textSize(20);
        text('∙ Click to jump over hurdles.', 200, 270);
        
        Buttons.goRun.draw();
    }
    if(scene === 'Running'){
        if(frameCount % 100 === 0){
            Hurdles.push(new Hurdle());
        }
        
        background(245);
        
        noStroke();
        fill(145, 42, 63);
        rect(0, 365, 400, 100);
        fill(245);
        rect(0, 430, 400, 5);
        rect(0, 388, 400, 4);
        
        for(var i = Hurdles.length - 1; i >= 0; i --) {
            Hurdles[i].draw();
        }
        player.draw();
    }
    if(scene === 'LiftingIntro'){
        background(245);
        
        noStroke();
        fill(207, 60, 87);
        rect(10, 190, 380, 50);
        
        textFont(createFont('Century Gothic Bold'), 50);
        fill(245);
        text('LIFTING', 200, 215);
        fill(207, 60, 87);
        textSize(25);
        text('R O U N D   T W O', 200, 180);
        textSize(20);
        text('∙ Click to lift the weight as high\nas you can.', 200, 279);
        
        Buttons.goLift.draw();
    }
    if(scene === 'Kayaking'){
        background(184, 229, 242);
        
        noStroke();
        for(var i = -15; i < 539; i += 20){
            fill(255, 255, 255, sin(i - frameCount * 2) * i / 3);
            pushMatrix();
            translate(0, i);
            beginShape();
            vertex(0, 0);
            bezierVertex(48, 39, 189, -41, 200, -40);
            bezierVertex(290, -64, 319, 41, 400, -35);
            vertex(400, -17);
            bezierVertex(319, 61, 290, -44, 200, -20);
            bezierVertex(189, -21, 48, 59, 0, 20);
            endShape();
            popMatrix();
        }
        
        if(frameCount % rockRate === 0){
            Rocks.push(new Rock());
            rockRate --;
        }
        
        kayak.draw();
        for(var i = Rocks.length - 1; i >= 0; i --){
            Rocks[i].draw();
        }
        
        noStroke();
        fill(0, 0, 0, 20);
        for(var i = -30 + frameCount * 2 % 30; i < height + 30; i += 30){
            triangle(0, i - 5, 36, i + 28, 0, i + 48);
        }
        endShape();
        for(var i = -30 + frameCount * 2 % 30; i < height + 30; i += 30){
            triangle(400, i - 5, 362, i + 28, 400, i + 48);
        }
        
        fill(58, 209, 106);
        for(var i = -30 + frameCount * 2 % 30; i < height + 30; i += 30){
            triangle(0, i, 30, i + 28, 0, i + 39);
        }
        endShape();
        for(var i = -30 + frameCount * 2 % 30; i < height + 30; i += 30){
            triangle(400, i, 370, i + 28, 400, i + 39);
        }
        
        //rect(180, 280, 40, 40);
        
    }
    
    // Transition
    if(trans.active){
        noStroke();
        if(trans.out){
            fill(58, 152, 207);
            rect(0, 500 - trans.y[0], width, height);
            fill(207, 60, 87);
            rect(0, 500 -trans.y[1], width, height);
            fill(192, 207, 60);
            rect(0, 500 - trans.y[2], width, height);
            fill(60, 207, 104);
            rect(0, 500 - trans.y[3], width, height);
            trans.y[3] /= 1.2;
            if(trans.y[3] < 100){
                trans.y[2] /= 1.2;
            }
            if(trans.y[2] < 100){
                trans.y[1] /= 1.2;
            }
            if(trans.y[1] < 100){
                trans.y[0] /= 1.2;
            }
            if(trans.y[0] < 0.1){
                trans.out = false;
                trans.active = false;
                trans.y = [500, 500, 500, 500];
            }
        } else {
            fill(58, 152, 207);
            rect(0, trans.y[0], width, height);
            fill(207, 60, 87);
            rect(0, trans.y[1], width, height);
            fill(192, 207, 60);
            rect(0, trans.y[2], width, height);
            fill(60, 207, 104);
            rect(0, trans.y[3], width, height);
            
            trans.y[0] /= 1.1;
            if(trans.y[0] < 100){
                trans.y[1] /= 1.1;
            }
            if(trans.y[1] < 100){
                trans.y[2] /= 1.1;
            }
            if(trans.y[2] < 100){
                trans.y[3] /= 1.1;
            }
            if(trans.y[3] < 10){
                scene = trans.nextScene;
                trans.y = [500, 500, 500, 500];
                trans.out = true;
            }
        } 
    }
    
    cursor(overButton ? 'pointer' : 'default');
    
    clicked = false;
    overButton = false;
};
