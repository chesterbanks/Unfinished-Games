imageMode(CENTER);
textFont(createFont("Verdana"));
textAlign(CENTER, CENTER);

var scene = "Pick";
var theMagicalDebugVariable = false;
var howManyEnemies = 8;

var keys = [];
var keyPressed = function(){keys[keyCode] = true;};
var keyReleased = function(){keys[keyCode] = false;};

var images = {
    "BG1": function(){
        background(34, 179, 102);
        
        noStroke();
        for(var i = 0; i < 400; i += 20){
            for(var j = 0; j < 400; j += 20){
                fill(0, 0, 0, random(100));
                rect(i, j, 20, 20);
            }
        }
        
        filter(BLUR, 5);
        
        return get(0, 0, 400, 400);
    },
    
    "grass": function(){
        noStroke();
        fill(48, 201, 112);
        rect(0, 0, 40, 40);
        
        for(var i = 0; i < 40; i ++){
            stroke(0, 0, 0, i);
            line(i, 0, i, 40);
            line(0, i, 40, i);
        }
        
        return get(0, 0, 40, 40);
    },
    "line": function(){
        imageMode(CORNER);
        image(images.grass, 0, 0);
        
        noStroke();
        fill(199, 48, 48);
        rect(0, 15, 40, 10);
        fill(0, 0, 0, 30);
        rect(0, 15, 40, 5);
        imageMode(CENTER);
        
        return get(0, 0, 40, 40);
    },
    "flag": function(){
        noStroke();
        fill(199, 48, 48);
        rect(10, 5, 5, 30);
        triangle(15, 5, 15, 19, 30, 12);
        
        return get(0, 0, 40, 40);
    },
};

var player = {
    x: -155,
    y: -445,
    speed: 5,
    side: "Enemy",
    hasFlag: false,
    hasWon: false,
    isTagged: false,
    name: "Winston",
    img: getImage("creatures/Winston"),
};
var flag = {};
var Line = {};

var playerBtn = function(x, y, name, img, speed){
    this.x = x;
    this.y = y;
    this.w = 50;
    this.h = 50;
    this.name = name;
    this.img = img;
    this.speed = speed;
    
    this.brightness = 30;
    this.over = false;
    this.clicked = false;
};
var playerBtns = [
    new playerBtn(25, 70, "Purple Pi", getImage("avatars/leafers-seed"), 3),
    new playerBtn(85, 70, "Winston", getImage("avatars/piceratops-seed"), 4),
    new playerBtn(145, 70, "Hopper", getImage("avatars/aqualine-seed"), 5),
    new playerBtn(205, 70, "Donald", getImage("avatars/duskpin-seed"), 6),
    new playerBtn(265, 70, "Old Spice", getImage("avatars/primosaur-seed"), 3),
    new playerBtn(325, 70, "OJ Squid", getImage("avatars/starky-seed"), 7),
    
    new playerBtn(25, 130, "Purple Pi", getImage("avatars/leafers-seedling"), 3),
    new playerBtn(85, 130, "Winston", getImage("avatars/piceratops-seedling"), 4),
    new playerBtn(145, 130, "Hopper", getImage("avatars/aqualine-seedling"), 5),
    new playerBtn(205, 130, "Donald", getImage("avatars/duskpin-seedling"), 6),
    new playerBtn(265, 130, "Old Spice", getImage("avatars/primosaur-seedling"), 3),
    new playerBtn(325, 130, "OJ Squid", getImage("avatars/starky-seedling"), 7),
    
    new playerBtn(25, 190, "Purple Pi", getImage("avatars/leafers-sapling"), 3),
    new playerBtn(85, 190, "Winston", getImage("avatars/piceratops-sapling"), 4),
    new playerBtn(145, 190, "Hopper", getImage("avatars/aqualine-sapling"), 5),
    new playerBtn(205, 190, "Donald", getImage("avatars/duskpin-sapling"), 6),
    new playerBtn(265, 190, "Old Spice", getImage("avatars/primosaur-sapling"), 3),
    new playerBtn(325, 190, "OJ Squid", getImage("avatars/starky-sapling"), 7),
    
    new playerBtn(25, 250, "Purple Pi", getImage("avatars/leafers-tree"), 3),
    new playerBtn(85, 250, "Winston", getImage("avatars/piceratops-tree"), 4),
    new playerBtn(145, 250, "Hopper", getImage("avatars/aqualine-tree"), 5),
    new playerBtn(205, 250, "Donald", getImage("avatars/duskpin-tree"), 6),
    new playerBtn(265, 250, "Old Spice", getImage("avatars/primosaur-tree"), 3),
    new playerBtn(325, 250, "OJ Squid", getImage("avatars/starky-tree"), 7),
    
    new playerBtn(25, 310, "Purple Pi", getImage("avatars/leafers-ultimate"), 3),
    new playerBtn(85, 310, "Winston", getImage("avatars/piceratops-ultimate"), 4),
    new playerBtn(145, 310, "Hopper", getImage("avatars/aqualine-ultimate"), 5),
    new playerBtn(205, 310, "Donald", getImage("avatars/duskpin-ultimate"), 6),
    new playerBtn(265, 310, "Old Spice", getImage("avatars/primosaur-ultimate"), 3),
    new playerBtn(325, 310, "OJ Squid", getImage("avatars/starky-ultimate"), 7),
];
playerBtn.prototype.draw = function() {
    this.over = false;
    
    if(mouseX > this.x && mouseX < this.x + this.w && mouseY > this.y && mouseY < this.y + this.h){
        this.over = true;
        if(mouseIsPressed){
            this.clicked = true;
        }
    }
    if(this.over){
        this.brightness = 100;
    } else {
        this.brightness = 30;
    }
    
    strokeWeight(3);
    stroke(255, 255, 255, 100);
    fill(255, 255, 255, this.brightness);
    rect(this.x, this.y, this.w, this.h);
    image(this.img, this.x+(this.w/2), this.y+(this.h/2), 40, 40);
    
    if(this.clicked){
        player.speed = this.speed;
        player.img = this.img;
        player.name = this.name;
        scene = "Play";
    }
};

var Enemy = function(baseX, baseY, baseSz){
    this.x = baseX;
    this.y = baseY;
    this.baseX = baseX;
    this.baseY = baseY;
    this.baseSz = baseSz;
};
var Enemies = [];
Enemy.prototype.draw = function() {
    strokeWeight(1);
    // (player.x + this.x), (player.y + this.y)
    
    noFill();
    pushMatrix();
    translate((player.x + this.x), (player.y + this.y));
    rotate(atan2(200 - (player.y + this.y), 200 - (player.x + this.x)));
    image(getImage("cute/EnemyBug"), 0, -9, 30, 60);
    popMatrix();
    
    if(theMagicalDebugVariable){
        stroke(255, 0, 0, 100);
        ellipse(player.x + this.baseX, player.y + this.baseY, 3, 3);
        ellipse(player.x + this.baseX, player.y + this.baseY, this.baseSz, this.baseSz);
    }
    
    if(dist(player.x + this.baseX, player.y + this.baseY, 200, 200) < this.baseSz/2){
        this.x += cos(atan2(200 - (player.y + this.y), 200 - (player.x + this.x))) * 4;
        this.y += sin(atan2(200 - (player.y + this.y), 200 - (player.x + this.x))) * 4;
    }
    if(dist((player.x + this.x), (player.y + this.y), 200, 200) < 15 && player.side === "Enemy"){
        player.isTagged = true;
    }
};

var course = [
    '                        ',
    '          F             ',
    '                        ',
    '                        ',
    '                        ',
    '                        ',
    '                        ',
    '                        ',
    '                        ',
    '                        ',
    '                        ',
    '                        ',
    '                        ',
    'LLLLLLLLLLLLLLLLLLLLLLLL',
    '                        ',
    '                        ',
    '                        ',
    '                        ',
    '                        ',
    '                        ',
    '                        ',
    '                        ',
    '                        ',
    '                        ',
];

var drawMap = function(){
    for(var i = 0; i < course.length; i ++){
        for(var j = 0; j < course[i].length; j ++){
            var letter = course[j][i].charAt();
            
            imageMode(CORNER);
            switch(letter){
                case 'L':
                    Line.y = j*40;
                    image(images.line, player.x + i*40, player.y + j*40);
                    break;
                case 'F':
                    flag.x = player.x + i*40;
                    flag.y = player.y + j*40;
                    image(images.grass, player.x + i*40, player.y + j*40);
                    if(!player.hasFlag){
                        image(images.flag, player.x + i*40, player.y + j*40);
                    }
                    break;
                default:
                    image(images.grass, player.x + i*40, player.y + j*40);
                    break;
            }
            imageMode(CENTER);
        }
    }
};

draw = function() {
    for(var i in images){
        if (typeof images[i] !== "object") {
            background(0, 0, 0, 0);
            images[i] = images[i]();
        }
    }
    
    if(scene === "Pick"){
        background(245);
        image(images.BG1, 200, 200);
        
        fill(0, 0, 0, 50);
        textSize(30);
        text("PICK YOUR PLAYER", 205, 40);
        fill(245);
        text("PICK YOUR PLAYER", 200, 35);
        
        for(var i in playerBtns){
            playerBtns[i].draw();
        }
    }
    if(scene === "Play"){
        background(245);
        
        drawMap();
        
        if(Enemies.length < howManyEnemies){
            Enemies.push(new Enemy(random(0, 550), random(550), random(100, 400)));
        }
        for(var i in Enemies){
            Enemies[i].draw();
        }
        
        image(player.img, 200, 200, 30, 30);
        
        if(keys[RIGHT]){
            player.x -= player.speed;
        }
        if(keys[LEFT]){
            player.x += player.speed;
        }
        if(keys[UP]){
            player.y += player.speed;
        }
        if(keys[DOWN]){
            player.y -= player.speed;
        }
        
        if(abs(player.y) + 150 > Line.y){
            player.side = "Home";
        } else if (abs(player.y) + 210 < Line.y){
            player.side = "Enemy";
        } else {
            player.side = "Line";
        }
        
        if(player.x < -180 && player.x > -250 && player.y < 215 && player.y > 145){
            player.hasFlag = true;
            
        }
        if(player.hasFlag){
            flag.x = 200;
            flag.y = 200;
            pushMatrix();
            translate(220, 210);
            rotate(4);
            image(images.flag, 0, 0);
            popMatrix();
            if(player.side === "Home"){
                player.hasWon = true;
            }
        }
        
        if(theMagicalDebugVariable){
            textSize(11);
            fill(25);
            text("player.x: " + player.x + "\nplayer.y: " + player.y + "\nplayer.side: " + player.side + "\nplayer.hasFlag: " + player.hasFlag + "\nflag.x: " + flag.x + "\nflag.y: " + flag.y + "\nplayer.hasWon: " + player.hasWon + "\nplayer.isTagged: " + player.isTagged + "\nline.y: " + Line.y, 200, 330);
        }
        
        fill(255);
        text("Project CTF1\nPage ID CTF_PL\nPress D to debug", 55, 375);
    }
};

var keyTyped = function(){
    if(key.toString().toUpperCase() === "D"){
        if(theMagicalDebugVariable){
            theMagicalDebugVariable = false;
        } else {
            theMagicalDebugVariable = true;
        }
    }
};
