// spot it! @o@
// I've gotten complacent with the mechanics of my games. Even though this game's gameplay seems simple enough, I did have to get out of my comfort zone and figure out some new stuff while I made this gameplay

/**
    If I made my own images, they would be:
 * Frost main character
 * Frost robots
 * Art (MU)
 * Mike (MU)
 * Sulley (MU)
 * Terry/Terri (MU)
 * Squishy (MU)
 * Ice cream cone (scoop it)
 * Multi Click character
 * River raid plane
 * River raid copter
 * Doctor
 * Burger
 * Ninja
 * Red ninja
 * Shuriken
 * Obi Run Kenobi
 * Texting Emoji
 * Texting icon
 * Texting angry emoji
 * Knight monkey
 * Guard monkey
 * Robot monkey
 * 5 block ninjas
 * 
 * 
 * 
 * 
 * 8 pixel fruits
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * The little hexagon
 * 5 characters from the case of the stolen shoes
 * 
 * 
 * 
 * 
 * Pac man
 * Pac man ghost
 * Fish
 * CB Logo
 * Dungeon theif character
 * Lime tamer
 * Lime tamer's lime
 * Scarecrow crow
 * Scarecrow
 * Dig deep treasure chest
 * Descent skiier
*/

var overButton = false, clicked = false;
var scene = 'Menu';
var name = 'JACKSON ENOUGH';
var scores = [0, 0, 0];

var loadGoogleFont = (function () {
    return this.Function ("gfName", 
    "gfName = gfName.replace ( /\\s+/g, '+' );" + 
    "var subsets = Array.prototype.slice.call ( arguments, 1, arguments.length - 1 );" + 
    "var url = 'https://fonts.googleapis.com/css?family=' + gfName + ( subsets.length > 0 ? '&amp;subset=' + subsets : '' ), callback = arguments [ arguments.length - 1 ];" +
    "var gfs = document.querySelectorAll('link[href=\"' + url+'\"]');" + 
    "if (!gfs.length) {" + 
        "var f = document.createElement('link');" + 
        "f.setAttribute('rel', 'stylesheet');" + 
        "f.setAttribute('type', 'text/css');" + 
        "f.onload = callback;" +    
        "f.setAttribute('href', url);" + 
        "document.head.appendChild(f);" + 
    "} else if (typeof callback === 'function') {" + 
        "callback.call(gfs[0]);" + 
    "}"
);
})();

textAlign(CENTER, CENTER);
loadGoogleFont("Emilys Candy");

var newFont = 'Nixie One';
loadGoogleFont(newFont);

var chooseRandomUniqueNumbers = function(range){
    var nums = [];

    while(nums.length < 12){
        // add however many needed
        for(var i = 0; i < 12 - nums.length; i ++){
            nums.push(floor(random(range)));
        }
        //println('Array after originals: ' + nums);
        
        // remove duplicates
        for(var i = 0; i < nums.length; i ++){
            for(var j = 0; j < nums.length; j ++){
                if(nums[i] === nums[j] && i !== j){
                    nums.splice(i, 1);
                }
            }
        }
        //println('Array after removed duplicates: ' + nums);
    }
    
    return nums;
};
var scoreCircle = function(x, y, num){
    fill(79, 25, 35, 30);
    ellipse(x, y + 8, 50, 50);
    fill(217, 102, 123);
    ellipse(x, y + 3, 50, 50);
    fill(242, 114, 137);
    ellipse(x, y, 50, 50);
    fill(255);
    textSize(25);
    text(num, x, y);
};

var images = {
    moon: function(){
        pushMatrix();
        translate(170, 170);
        scale(1);
        
        for(var i = 0; i < 333; i += 30){
            pushMatrix();
            scale(1);
            rotate(i);
            rotate(0);
            fill(49, 55, 64);
            beginShape();
            vertex(-30, -77);
            vertex(30, -77);
            vertex(45, -166);
            bezierVertex(11, -93, -24, -122, -45, -166);
            endShape();
            popMatrix();
        }
        
        fill(97, 123, 133);
        ellipse(0, 0, 200, 200);
        
        fill(49, 55, 64, 100);
        ellipse(-44, -68, 50, 50);
        ellipse(58, -49, 30, 30);
        ellipse(23, 22, 40, 40);
        ellipse(-65, 61, 60, 60);
        ellipse(83, 41, 30, 30);
    
        fill(0, 0, 0);
        ellipse(-32, -23, 25, 25);
        ellipse(32, -23, 25, 25);
        
        noFill();
        strokeWeight(5);
        stroke(43, 43, 43);
        bezier(-14, -1, -6, -11, 1, -15, 14, -1);
        popMatrix();
        
        return get(0, 0, 335, 335);
    },
};

var switchCards = false;
var possibleImages = [
    //getImage("avatars/aqualine-sapling"),
    'moon',
    //getImage("avatars/aqualine-seed"),
    //getImage("avatars/aqualine-seedling"),
    //getImage("avatars/aqualine-tree"),
    //getImage("avatars/aqualine-ultimate"),
    //getImage("avatars/avatar-team"),
    getImage("avatars/duskpin-sapling"),
    getImage("avatars/duskpin-seed"),
    getImage("avatars/duskpin-seedling"),
    getImage("avatars/duskpin-tree"),
    getImage("avatars/duskpin-ultimate"),
    getImage("avatars/leaf-blue"),
    getImage("avatars/leaf-green"),
    getImage("avatars/leaf-grey"),
    getImage("avatars/leaf-orange"),
    getImage("avatars/leaf-red"),
    getImage("avatars/leaf-yellow"),
    getImage("avatars/leafers-sapling"),
    getImage("avatars/leafers-seed"),
    getImage("avatars/leafers-seedling"),
    getImage("avatars/leafers-tree"),
    getImage("avatars/leafers-ultimate"),
    getImage("avatars/marcimus"),
    getImage("avatars/marcimus-orange"),
    getImage("avatars/marcimus-purple"),
    getImage("avatars/marcimus-red"),
    getImage("avatars/mr-pants"),
    getImage("avatars/mr-pants-green"),
    getImage("avatars/mr-pants-orange"),
    getImage("avatars/mr-pants-pink"),
    getImage("avatars/mr-pants-purple"),
    getImage("avatars/mr-pants-with-hat"),
    getImage("avatars/mr-pink"),
    getImage("avatars/mr-pink-green"),
    getImage("avatars/mr-pink-orange"),
    getImage("avatars/old-spice-man"),
    getImage("avatars/old-spice-man-blue"),
    getImage("avatars/orange-juice-squid"),
    getImage("avatars/piceratops-sapling"),
    getImage("avatars/piceratops-seed"),
    getImage("avatars/piceratops-seedling"),
    getImage("avatars/piceratops-tree"),
    getImage("avatars/piceratops-ultimate"),
    getImage("avatars/primosaur-sapling"),
    getImage("avatars/primosaur-seed"),
    getImage("avatars/primosaur-seedling"),
    getImage("avatars/primosaur-tree"),
    getImage("avatars/primosaur-ultimate"),
    getImage("avatars/purple-pi"),
    getImage("avatars/purple-pi-pink"),
    getImage("avatars/purple-pi-teal"),
    getImage("avatars/questionmark"),
    getImage("avatars/robot_female_1"),
    getImage("avatars/robot_female_2"),
    getImage("avatars/robot_female_3"),
    getImage("avatars/robot_male_1"),
    getImage("avatars/robot_male_2"),
    getImage("avatars/robot_male_3"),
    getImage("avatars/spunky-sam"),
    getImage("avatars/spunky-sam-green"),
    getImage("avatars/spunky-sam-orange"),
    getImage("avatars/spunky-sam-red"),
    getImage("avatars/starky-sapling"),
    getImage("avatars/starky-seed"),
    getImage("avatars/starky-seedling"),
    getImage("avatars/starky-tree"),
    getImage("avatars/starky-ultimate"),
    getImage("creatures/Hopper-Happy"),
    getImage("creatures/Hopper-Cool"),
    getImage("creatures/Hopper-Jumping"),
    getImage("creatures/OhNoes"),
    getImage("creatures/OhNoes-Happy"),
    getImage("creatures/OhNoes-Hmm"),
    getImage("creatures/BabyWinston"),
    getImage("creatures/Winston"),
];
var xs = [-79, -3, 105, 86, 33, -10, -94, -25, 40, -74, 24, 60];
var ys = [-72, -83, -3, 66, 104, 60, 2, -16, -94, 62, 18, -38];

var Card = function(x, y){
    this.x = x;
    this.y = y;
    this.plusX = 0;
    this.plusY = 0;
    this.plusSz = 0;
    
    this.icons = [];
    
    this.imageNums = chooseRandomUniqueNumbers(possibleImages.length);
    for(var i = 0; i < 12; i ++){
        this.icons.push({
            img: possibleImages[this.imageNums[i]],
            x: xs[i],
            y: ys[i],
            r: random(-50, 50),
            sz: random(50, 70),
            hover: false
        });
    }
};

var centerCard = new Card(400, 200);
var yourCard = new Card(200, 400);
var hopeCard = new Card(600, 600);
var kyleCard = new Card(0, 0);

Card.prototype.draw = function() {
    this.plusX /= 1.1;
    this.plusY /= 1.1;
    this.plusSz /= 1.1;
    
    pushMatrix();
    translate(this.x + this.plusX, this.y + this.plusY);
    scale(this.plusSz + 1);
    fill(126, 194, 183, 100);
    ellipse(0, 4, 325, 325);
    fill(255, 255, 245, 100);
    ellipse(0, 3, 310, 310);
    stroke(199, 199, 171);
    strokeWeight(4);
    fill(227, 227, 195);
    ellipse(0, 0, 300, 300);
    noStroke();
    for(var i = 0; i < 300; i += 10){
        fill(255, 255, 255, 10);
        ellipse(0, 0, i, i);
    }
    
    imageMode(CENTER);
    
    fill(45);
    for(var i = 0; i < this.icons.length; i ++){
        pushMatrix();
        translate(this.icons[i].x, this.icons[i].y);
        rotate(this.icons[i].r);
        scale(1);
        if(this.icons[i].hover){
            scale(1.2);
            rotate(sin(frameCount * 10) * 10);
        }
        
        if(typeof this.icons[i].img === "string"){
            image(images[this.icons[i].img], 0, 0, this.icons[i].sz, this.icons[i].sz);
        } else {
            image(this.icons[i].img, 0, 0, this.icons[i].sz, this.icons[i].sz);
        }
        popMatrix();
        
        this.icons[i].hover = false;
    }
    
    popMatrix();
};
Card.prototype.choose = function(){
    for(var i = 0; i < this.icons.length; i ++){
        if(dist(mouseX, mouseY, this.x + this.icons[i].x, this.y + this.icons[i].y) < this.icons[i].sz / 2.5){
            overButton = true;
            this.icons[i].hover = true;
            if(clicked){
                var itsThere = false;
                for(var j = 0; j < centerCard.icons.length; j ++){
                    if(this.icons[i].img === centerCard.icons[j].img){
                        itsThere = true;
                    }
                }
                
                if(itsThere){
                    switchCards = true;
                }
            }
        }
    }
};

var switchCardsFunc = function(){
    centerCard.icons = yourCard.icons;
    
    yourCard.icons = [];

    yourCard.imageNums = chooseRandomUniqueNumbers(possibleImages.length);
    for(var i = 0; i < 12; i ++){
        yourCard.icons.push({
            img: possibleImages[yourCard.imageNums[i]],
            x: xs[i],
            y: ys[i],
            r: random(-50, 50),
            sz: random(50, 70),
            hover: false
        });
    }
    
    centerCard.plusX = -200;
    centerCard.plusY = 200;
    yourCard.plusSz = -1;
    
    switchCards = false;
};

var circles = [];
for(var i = 0; i < 21; i ++){
    circles.push({y: random(17), sz: random(50, 30)});
}

draw = function() {
    textFont(createFont("Emilys Candy"));
    textFont(createFont(newFont));
    
    for(var i in images){
        if (typeof images[i] !== "object") {
            background(0, 0, 0, 0);
            images[i] = images[i]();
        }
    }
    
    if(scene === 'Menu'){
        background(162, 232, 221);
        
        noStroke();
        pushMatrix();
        translate(282, 276);
        rotate(-14);
        textSize(130);
        fill(0, 0, 0, 30);
        text('Spot It', 0, 7);
        //textSize(130);
        fill(227, 227, 218);
        text('Spot It', 0, 3);
        fill(255, 255, 245);
        text('Spot It', 0, 0);
        fill(125, 196, 184);
        textSize(27);
        text('c h e s t e r   b a n k s', 55, 90);
        popMatrix();
        
        pushMatrix();
        translate(18, 175);
        rotate(-16);
        for(var i = 0; i < circles.length; i ++){
            fill(149, 219, 207);
            ellipse(i * 30, circles[i].y, circles[i].sz * 2, circles[i].sz * 2);
            ellipse(-91 + i * 30, 358 + circles[i].y, circles[i].sz * 2, circles[i].sz * 2);
        }
        
        fill(255, 255, 245);
        rect(-33, -159, 630, 170);
        rect(-144, 371, 630, 202);
        for(var i = 0; i < circles.length; i ++){
            fill(255, 255, 245);
            ellipse(i * 30, circles[i].y, circles[i].sz, circles[i].sz);
            ellipse(-91 + i * 30, 358 + circles[i].y, circles[i].sz, circles[i].sz);
        }
        popMatrix();
        
        pushMatrix();
        translate(195, 543);
        rotate(-15);
        fill(125, 196, 184);
        textSize(17);
        var clicktobegin = 'CLICK TO BEGIN'.split('');
        for(var i = 0; i < clicktobegin.length; i ++){
            text(clicktobegin[i], i * 27, sin((i * 35)+frameCount * 10) * 5);
        }
        popMatrix();
        
        noFill();
        strokeWeight(20);
        stroke(255, 255, 245);
        rect(0, 0, 600, 600);
        
        if(mouseY > 550 - (mouseX / 3)){
            overButton = true;
            if(clicked){
                scene = 'Game';
            }
        }
    }
    if(scene === 'Game'){
        background(255, 255, 245);
        
        noStroke();
        fill(162, 232, 221);
        rect(15, 15, 570, 570);
        
        kyleCard.draw();
        hopeCard.draw();
        
        yourCard.draw();
        centerCard.draw();
        yourCard.choose();
        
        noFill();
        strokeCap(SQUARE);
        stroke(212, 104, 124);
        strokeWeight(23);
        arc(-3, 3, 327, 327, 25, 54);
        arc(199, 403, 320, 320, 124 - (name.length * 6), 135);
        arc(600, 600, 320, 320, 212, 247);
        stroke(242, 114, 137);
        strokeWeight(23);
        strokeCap(SQUARE);
        arc(0, 0, 320, 320, 26, 54);
        arc(600, 600, 320, 320, 213, 247);
        arc(200, 400, 320, 320, 124 - (name.length * 6), 130);
        fill(255);
        textSize(17);
        var txt = 'HOPE'.split('');
        for(var i = 0; i < txt.length; i ++){
            pushMatrix();
            rotate((i * -6) - 41);
            text(txt[i], 0, 160);
            popMatrix();
        }
        
        txt = 'KYLE'.split('');
        for(var i = 0; i < txt.length; i ++){
            pushMatrix();
            translate(600, 600);
            rotate((i * 6) - 52);
            text(txt[i], 0, -160);
            popMatrix();
        }
        for(var i = 0; i < name.length; i ++){
            pushMatrix();
            translate(200, 400);
            rotate((i * -6) + 33);
            text(name[i], 0, 160);
            popMatrix();
        }
        
        noStroke();
        scoreCircle(82, 508, scores[0]);
        scoreCircle(75, 139, scores[1]);
        scoreCircle(547, 451, scores[2]);
        
        if(switchCards){
            switchCardsFunc();
        }
    }
    
    cursor(overButton ? 'pointer' : 'default');
    
    overButton = false;
    clicked = false;
    
    
};

mouseClicked = function(){ 
    clicked = true; 
};
