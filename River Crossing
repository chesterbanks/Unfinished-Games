/**
 * River Crossing
 * Chester Banks
 * July 13 2017
*/

var scene = 'Menu';
var keys = [];

var Camera = {
    x: 0,
    y: 0,
    yvel: 0
};

var shoreTexture = [];
for(var i = -300; i <= height; i += 10){
    shoreTexture.push({x: random(10, 30), y: i});
}
var shore = function(){
    noStroke();
    fill(0, 0, 0, 30);
    beginShape();
    vertex(0, 0);
    vertex(0, 600);
    for(var i = shoreTexture.length - 1; i >= 0; i --){
        vertex(shoreTexture[i].x + 5, shoreTexture[i].y + 5);
    }
    endShape(CLOSE);
    beginShape();
    vertex(600, 0);
    vertex(600, 600);
    for(var i = shoreTexture.length - 1; i >= 0; i --){
        vertex(shoreTexture[i].x + 548, shoreTexture[i].y + 5);
    }
    endShape(CLOSE);
    stroke(27, 148, 81);
    fill(37, 186, 60);
    beginShape();
    vertex(0, 0);
    vertex(0, 600);
    for(var i = shoreTexture.length - 1; i >= 0; i --){
        vertex(shoreTexture[i].x, shoreTexture[i].y);
    }
    endShape(CLOSE);
    beginShape();
    vertex(600, 0);
    vertex(600, 600);
    for(var i = shoreTexture.length - 1; i >= 0; i --){
        vertex(shoreTexture[i].x + 555, shoreTexture[i].y);
    }
    endShape(CLOSE);
};

var Log = function(x, y){
    this.x = x;
    this.y = y;
    this.w = 80;
    this.h = 30;
    this.xvel = random(1, 3);
    this.sink = false;
    this.sinkY = 0;
    this.sinkVel = 1;
};
Log.prototype.draw = function() {
    noStroke();
    pushMatrix();
    translate(this.x, this.y);
    fill(125, 89, 54);
    rect(0, 0, this.w + 3, this.h + 5, 5);
    ellipse(3, 21, 25, 27);
    pushMatrix();
    translate(0, this.sinkY);
    fill(148, 105, 62);
    rect(0, 0, this.w, this.h, 5);
    fill(0, 0, 0, 30);
    rect(28, 4, 51, 5);
    rect(5, 12, 73, 3);
    rect(6, 19, 67, 4);
    rect(19, 26, 59, 1);
    strokeWeight(3);
    stroke(148, 105, 62);
    fill(207, 168, 128);
    ellipse(3, 16, 25, 30);
    noFill();
    stroke(0, 0, 0, 30);
    ellipse(3, 16, 16, 20);
    ellipse(3, 16, 8, 12);
    point(3, 16);
    popMatrix();
    popMatrix();
    
    this.x += this.xvel;
    if(this.x + this.w > width || this.x < 0){
        this.xvel = -this.xvel;
    }
    if(this.sink){
        this.sinkY += this.sinkVel;
        this.sinkVel -= 0.1;
        if(this.sinkY < 0){
            this.sink = false;
            this.sinkY = 0;
        }
    }
};
var Logs = [];
for(var i = -300; i < 570; i += 30){
    Logs.push(new Log(random(520), i));
}

var Frog = function(x, y){
    this.log = Logs.length - 1;
    this.x = Logs[this.log].x;
    this.y = 540;
    this.w = 30;
    this.h = 30;
    this.s = 1;
    this.svel = 0.3;
    this.jump = false;
};
Frog.prototype.draw = function() {
    noStroke();
    pushMatrix();
    translate(this.x, this.y);
    scale(this.s);
    fill(41, 219, 92);
    rect(0, Logs[this.log].sinkY, this.w, this.h, 20);
    popMatrix();

    this.x += Logs[this.log].xvel;
    if(keys[LEFT]){
        this.x --;
    }
    if(keys[RIGHT]){
        this.x ++;
    }
    if(keys[UP] && !this.jump){
        this.jump = true;
        if(Camera.yvel === 0){
            Camera.yvel = 0.2;
        }
    }
    if(this.jump){
        this.y -= 3;
        this.s += this.svel;
        this.svel -= 0.1;
        if(this.y <= Logs[this.log - 1].y){
            this.y = Logs[this.log - 1].y;
            this.jump = false;
            this.log --;
            Logs[this.log].sink = true;
            this.s = 1;
            this.svel = 0.5;
        }
    }
};
var frog = new Frog();

var keyPressed = function(){ 
    keys[keyCode] = true; 
};
var keyReleased = function(){ 
    keys[keyCode] = false; 
};

draw = function() {
    if(scene === 'Menu'){
        background(155, 207, 245);
        noStroke();
        fill(255, 244, 94, 20);
        for(var i = 0; i < 600; i += 30){
            ellipse(300, 300, i, i);
        }
        fill(214, 255, 92);
        ellipse(300, 300, 200, 200);
        fill(75, 174, 232);
        rect(0, 300, width, 300);
        for(var i = 0; i < 300; i += 15){
            fill(0, 0, 0, 5);
            rect(0, 300, width, i);
        }
        
        pushMatrix();
        translate(285, 171);
        stroke(255);
        strokeWeight(20);
        line(0, 100, -50, -100);
        line(0, 100, 50, -100);
        line(-65, 100, -80, -100);
        line(-188, 100, -200, -100);
        bezier(-189, 0, -95, 27, -67, -171, -200, -100);
        bezier(-188, 0, -73, 36, -159, 22, -84, 122);
        line(65, 100, 80, -100);
        line(65, 100, 120, 100);
        line(79, 0, 120, 0);
        line(80, -100, 130, -100);
        line(155, 100, 165, -100);
        bezier(157, 0, -95 + 345, 27, -67 + 345, -171, -200 + 345, -100);
        bezier(-178 + 345, 9, -167 + 433, 36, -159 + 369, 162, -84 + 345, 133);
        popMatrix();
    }
    if(scene === 'Game'){
        background(75, 174, 232);
        noStroke();
        for(var i = 0; i < height; i += 15){
            fill(0, 0, 0, sin(i+frameCount)*15);
            rect(0, i, width, 15);
            fill(255, 255, 255, sin(100+i+frameCount)*10);
            rect(0, i, width, 8, 30);
        }
        
        pushMatrix();
        translate(Camera.x, Camera.y);
        for(var i = Logs.length - 1; i >= 0; i --){
            Logs[i].draw();
        }
        
        shore();
        
        frog.draw();
        popMatrix();
        
        
        Camera.y += Camera.yvel;
    }
};
