// merry christmas program

// REFERENCE
// different christmas trees at https://www.colourbox.com/preview/11068049-christmas-tree-icons-flat.jpg

var bgColor = color(22, 97, 30);

var letter = function(which, x, y, sz){
    noFill();
    pushMatrix();
    translate(x, y);
    scale(sz/50);
    switch(which.toUpperCase()){
        case 'A':
            line(0, -50, -40, 50);
            line(0, -50, 40, 50);
            line(-26, 20, 26, 20);
            break;
        case 'B':
            line(-40, -50, -40, 50);
            line(-40, -50, -10, -50);
            line(-40, 0, 5, 0);
            line(-40, 50, 5, 50);
            arc(-10, -25, 50, 50, -90, 90);
            arc(5, 25, 50, 50, -90, 90);
            break;
        case 'C':
            arc(0, -15, 80, 70, -180, 0);
            arc(0, 15, 80, 70, 0, 180);
            line(-40, 13, -40, -13);
            break;
        case 'D':
            arc(0, -15, 80, 70, -90, 0);
            arc(0, 15, 80, 70, 0, 90);
            line(-40, 50, -40, -50);
            line(-40, 50, 0, 50);
            line(-40, -50, 0, -50);
            line(40, -15, 40, 15);
            break;
        case 'E':
            line(-40, -50, -40, 50);
            line(-40, -50, 40, -50);
            line(-40, 10, 30, 10);
            line(-40, 50, 40, 50);
            break;
        case 'F':
            line(-40, -50, -40, 50);
            line(-40, -50, 40, -50);
            line(-40, 10, 30, 10);
            break;
        case 'G':
            arc(0, -15, 80, 70, -180, 0);
            arc(0, 15, 80, 70, 0, 180);
            line(-40, 13, -40, -13);
            line(-10, 15, 40, 15);
            break;
        case 'H':
            line(-40, -50, -40, 50);
            line(-40, 10, 40, 10);
            line(40, -50, 40, 50);
            break;
        case 'I':
            line(0, -50, 0, 50);
            line(-40, -50, 40, -50);
            line(-40, 50, 40, 50);
            break;
        case 'J':
            arc(-30, 15, 80, 70, 0, 90);
            line(-40, 50, -30, 50);
            line(10, -50, 10, 15);
            break;
        case 'K':
            line(-40, -50, -40, 50);
            line(-40, 15, 40, -50);
            line(-20, 0, 40, 50);
            break;
        case 'L':
            line(-40, -50, -40, 50);
            line(-40, 50, 40, 50);
            break;
        case 'M':
            line(-40, -50, -40, 50);
            line(0, 20, -40, -50);
            line(0, 20, 40, -50);
            line(40, -50, 40, 50);
            break;
        case 'N':
            line(-40, -50, -40, 50);
            line(40, 50, -40, -50);
            line(40, -50, 40, 50);
            break;
        case 'O':
            ellipse(0, 0, 80, 80);
            break;
        case 'P':
            line(-40, -50, -40, 50);
            line(-40, -50, 5, -50);
            line(-40, 0, 5, 0);
            arc(5, -25, 50, 50, -90, 90);
            break;
        case 'Q':
            arc(0, -15, 80, 70, -180, 0);
            arc(0, 15, 80, 70, 0, 180);
            line(-40, 13, -40, -13);
            line(40, 13, 40, -13);
            arc(5, 45, 30, 30, -180, 0);
            arc(30, 40, 20, 20, 0, 180);
            break;
        case 'R':
            line(-40, -50, -40, 50);
            line(-40, -50, 5, -50);
            line(-40, 0, 5, 0);
            arc(5, -25, 50, 50, -90, 90);
            line(0, 0, 40, 50);
            break;
        case 'S':
            line(-20, -50, 15, -50);
            line(-15, 0, 15, 0);
            line(-15, 50, 15, 50);
            arc(-15, -25, 50, 50, -270, -90);
            arc(15, 25, 50, 50, -90, 90);
            arc(15, -25, 50, 50, -100, -30);
            arc(-15, 25, 50, 50, 90, 150);
            break;
        case 'T':
            line(0, -50, 0, 50);
            line(-40, -50, 40, -50);
            break;
        case 'U':
            line(-40, -50, -40, 10);
            line(40, -50, 40, 10);
            arc(0, 10, 80, 80, 0, 180);
            break;
        case 'V':
            line(-40, -50, 0, 50);
            line(40, -50, 0, 50);
            break;
        case 'W':
            line(-40, -50, -25, 50);
            line(40, -50, 25, 50);
            line(0, 5, -25, 50);
            line(0, 5, 25, 50);
            break;
        case 'X':
            line(-40, -50, 40, 50);
            line(-40, 50, 40, -50);
            break;
        case 'Y':
            line(-40, -50, 0, 0);
            line(0, 0, 40, -50);
            line(0, 0, 0, 50);
            break;
        case 'Z':
            line(-40, -50, 40, -50);
            line(40, -50, -40, 50);
            line(-40, 50, 40, 50);
            break;
        case '.':
           ellipse(0, 42, 15, 15);
            break;
        case '\'':
            line(0, -20, 10, -50);
            break;
        case '?':
            arc(0, -30, 50, 50, 220, 440);
            line(0, 20, 0, 0);
            ellipse(0, 50, 10, 10);
            break;
        case '!':
            line(0, 10, 0, -50);
            ellipse(0, 50, 10, 10);
            break;
    }
    popMatrix();
};
var word = function(which, x, y, sz){
    var theWord = which.split("");
    
    
    for(var i in theWord){
        pushMatrix();
        translate(x - ((theWord.length - 1)*sz), y);
        if((theWord[i] === '\'' || theWord[i-1] === '\'') || (theWord[i] === '.' || theWord[i-1] === '.')){
            letter(theWord[i], i*(sz*1.9), 0, sz);
        } else {
            letter(theWord[i], i*(sz*2), 0, sz);
        }
        popMatrix();
    }
};
var word2 = function(which, x, y, sz){
    strokeWeight(30);
    word(which, x, y + 3, sz);
    for(var i = 25; i > 0; i -= 3){
        stroke(255, 255, 255, 20);
        strokeWeight(i);
        word(which, x, y, sz);
    }
};

var tree = function(x, y, sz, which){
    textAlign(CENTER, CENTER);
    rectMode(CENTER);
    
    pushMatrix();
    translate(x, y);
    scale(sz / 100);
    switch(which){
        case 0:
            noStroke();
            fill(158, 118, 65);
            rect(0, 35, 10, 10);
            fill(35, 186, 58);
            triangle(20, -30, -20, -30, 0, -70);
            triangle(30, 0, -30, 0, 0, -50);
            triangle(35, 30, -35, 30, 0, -30);
            fill(0, 0, 0, 25);
            beginShape();
            vertex(0, -70);
            vertex(-20, -30);
            vertex(-13, -30);
            vertex(-30, 0);
            vertex(-18, 0);
            vertex(-35, 30);
            vertex(0, 30);
            endShape();
            fill(214, 214, 66);
            triangle(7, -60, -7, -60, 0, -73);
            textSize(25);
            text('\u2605', 0, -78);
            break;
        case 1:
            noStroke();
            fill(158, 118, 65);
            rect(0, 32, 20, 5);
            fill(35, 186, 58);
            triangle(-35, 30, 35, 30, 0, -70);
            stroke(bgColor);
            strokeWeight(5);
            line(-30, -30, 20, -70);
            line(-30, 0, 20, -40);
            line(-30, 30, 20, -10);
            line(7, 35, 34, 10);
            fill(214, 214, 66);
            textSize(25);
            text('\u2605', 0, -75);
            break;
        case 2:
            noStroke();
            fill(158, 118, 65);
            rect(0, 33, 10, 10);
            fill(35, 186, 58, 50);
            fill(35, 186, 58);
            ellipse(1, -43, 13, 13);
            fill(88, 209, 106);
            ellipse(-1, -54, 5, 5);
            fill(40, 156, 58);
            ellipse(1, -31, 7, 7);
            fill(60, 201, 81);
            ellipse(-7, -34, 6, 6);
            fill(72, 171, 87);
            ellipse(9, -32, 5, 5);
            fill(36, 199, 60);
            ellipse(-8, -23, 12, 12);
            fill(34, 161, 53);
            ellipse(7, -18, 15, 15);
            fill(43, 201, 64);
            ellipse(16, -7, 8, 8);
            fill(30, 158, 49);
            ellipse(-14, -12, 8, 8);
            fill(48, 176, 67);
            ellipse(-5, -11, 6, 6);
            ellipse(-8, 2, 12, 12);
            ellipse(5, -2, 12, 12);
            ellipse(-18, -3, 5, 5);
            ellipse(16, 2, 5, 5);
            ellipse(2, 11, 10, 10);
            ellipse(-12, 18, 15, 15);
            ellipse(23, 22, 13, 13);
            ellipse(20, 10, 9, 9);
            ellipse(12, 16, 6, 6);
            ellipse(11, 24, 6, 6);
            ellipse(1, 22, 8, 8);
            ellipse(-21, 7, 10, 10);
            ellipse(10, 7, 3, 3);
            ellipse(-26, 23, 8, 8);
            break;
    }
    popMatrix();
};

var sz1 = -150, sz2 = -100, sz3 = -100, sz4 = -25, sz5 = -15;

draw = function() {
    background(bgColor);
    noStroke();
    fill(0, 0, 0, 20);
    rect(0, 0, 0.5, 0, -600);
    
    tree(100, 200, 100 + sz2, 0);
    tree(200, 200, 150 + sz1, 1);
    tree(300, 200, 100 + sz3, 2);
    
    strokeWeight(30);
    stroke(0, 0, 0, 30);
    word('Merry', 200, 309, 25 + sz4);
    word('Christmas', 200, 359, 15 + sz5);
    
    stroke(42, 209, 64);
    word2('Merry', 200, 300, 25 + sz4);
    stroke(217, 54, 54);
    word2('Christmas', 200, 350, 15 + sz5);
    
    sz1 /= 1.2;
    if(sz1 > -1){
        sz2 /= 1.2;
    }
    if(sz2 > -1){
        sz3 /= 1.2;
    }
    if(sz3 > -1){
        sz4 /= 1.2;
    }
    if(sz4 > -1){
        sz5 /= 1.2;
    }
};
