/**
 * Obi Run Kenobi
 * February 21 2017
 * Chester Banks
 * 
 * A quick Star Wars themed game made for the "3D without P3D" contest.
 * 
 * 
*/

var scene = 'Game';

textAlign(CENTER, CENTER);
textFont(createFont('Arial Black'));

// This helps with key movement
var keys = [];
var keyPressed = function(){ keys[keyCode] = true; };
var keyReleased = function(){ keys[keyCode] = false; };
var clicked = false;
mouseClicked = function(){ clicked = true; };

var images = {
    'bg': function(){
        strokeWeight(1);
        background(54, 11, 11);
        
        noStroke();
        fill(15);
        triangle(-30, 320, 130, 320, 50, 166);
        triangle(100, 320, 300, 320, 200, 140);
        fill(20);
        triangle(0, 320, 200, 320, 100, 100);
        quad(150, 325, 483, 320, 354, 126, 325, 100);
        fill(28, 28, 28);
        quad(150, 320, 450, 320, 320, 100, 285, 100);
        
        fill(209, 62, 25);
        beginShape();
        vertex(285, 100);
        vertex(237, 178);
        vertex(264, 166);
        vertex(269, 177);
        vertex(246, 212);
        vertex(277, 182);
        vertex(275, 158);
        vertex(287, 137);
        vertex(291, 151);
        vertex(291, 172);
        vertex(288, 181);
        vertex(298, 178);
        vertex(298, 200);
        vertex(286, 205);
        vertex(303, 200);
        vertex(306, 179);
        vertex(298, 175);
        vertex(297, 145);
        vertex(305, 143);
        vertex(304, 168);
        vertex(310, 147);
        vertex(315, 140);
        vertex(316, 133);
        vertex(330, 192);
        vertex(320, 210);
        vertex(315, 202);
        vertex(313, 210);
        vertex(321, 227);
        vertex(323, 215);
        vertex(334, 197);
        vertex(321, 141);
        vertex(328, 138);
        vertex(334, 132);
        vertex(372, 198);
        vertex(375, 197);
        vertex(380, 201);
        vertex(325, 100);
        endShape();
        noFill();
        stroke(158, 82, 82);
        beginShape();
        vertex(251, 211);
        vertex(233, 248);
        vertex(249, 262);
        vertex(209, 280);
        vertex(224, 296);
        vertex(215, 308);
        vertex(228, 322);
        vertex(329, 329);
        vertex(335, 290);
        vertex(315, 279);
        vertex(322, 256);
        vertex(316, 240);
        vertex(323, 227);
        endShape();
        
        filter(BLUR, 2);
        
        return get(0, 0, width, 320);
    }
};

// The rectangle collision function
var rectCollide = function(one, two){
    if( one.x+one.w > two.x &&
        one.y+one.h > two.y &&
        one.x < two.x+two.w &&
        one.y < two.y+two.h){
        return true;
    }
};

var Block = function(x, y, w, h){
    this.x = x;
    this.y = y;
    this.w = w;
    this.h = h;
};
Block.prototype.draw = function() {
    noStroke();
    fill(66, 66, 66);
    quad(this.x, this.y,
        this.x + this.w, this.y,
        this.x + this.w/2 + (200 - this.x) / 2, this.y - 30 + (300 - this.y) / 2,
        this.x + (200 - this.x) / 2, this.y - 30+ (300 - this.y) / 2);
    quad(this.x + this.w, this.y + this.h,
        this.x + this.w, this.y,
        this.x + this.w/2 + (200 - this.x) / 2, this.y - 30 + (300 - this.y) / 2,
        this.x + this.w/2 + (200 - this.x) / 2, this.y - 30 + this.h/2 + (300 - this.y) / 2);
    quad(this.x, this.y + this.h,
        this.x, this.y,
        this.x + (200 - this.x) / 2, this.y - 30 + (300 - this.y) / 2,
        this.x + (200 - this.x) / 2, this.y - 30 + this.h/2 + (300 - this.y) / 2);
    
    fill(0, 0, 0);
    rect(this.x, this.y, this.w, this.h);
    
    fill(48, 48, 48);
    rect(this.x, this.y, this.w, this.h / 5);
    
    this.x -= 5;
};
var Blocks = [new Block(0, 370, width, 30)], blockSpacing = 120;

var Player = function(){
    this.x = 77;
    this.y = 300;
    this.w = 30;
    this.h = 30;
    
    this.xvel = 0;
    this.yvel = 0;
    this.speed = 5;
    
    this.jumping = true;
};
Player.prototype.draw = function() {
    noStroke();
    fill(204, 159, 134);
    quad(this.x + this.w, this.y + this.h,
        this.x + this.w, this.y,
        this.x + this.w/2 + (200 - this.x) / 6, this.y - 30 + (380 - this.y) / 2,
        this.x + this.w/2 + (200 - this.x) / 6, this.y - 30 + this.h/2 + (380 - this.y) / 2);
    quad(this.x, this.y + this.h,
        this.x, this.y,
        this.x + (200 - this.x) / 6, this.y - 30 + (380 - this.y) / 2,
        this.x + (200 - this.x) / 6, this.y - 30 + this.h/2 + (380 - this.y) / 2);
    quad(this.x, this.y,
        this.x + this.w, this.y,
        this.x + this.w/2 + (200 - this.x) / 6, this.y - 30 + (380 - this.y) / 2,
        this.x + (200 - this.x) / 6, this.y - 30+ (380 - this.y) / 2);
    quad(this.x, this.y + this.h,
        this.x + this.w, this.y + this.h,
        this.x + this.w/2 + (200 - this.x) / 6, this.y - 30 + (380 - this.y) / 2 + (this.h/2),
        this.x + (200 - this.x) / 6, this.y - 30+ (380 - this.y) / 2 + (this.h/2));
    
    fill(232, 181, 153);
    rect(this.x, this.y, this.w, this.h);
    
    fill(168, 106, 62);
    rect(this.x, this.y, this.w, this.h / 3);
    
    pushMatrix();
    translate(this.x + this.w + 5, this.y + 15);
    rotate(sin(frameCount*5)*15);
    for(var i = 17; i > 5; i -= 5){
        stroke(0, 196, 255, 50);
        strokeWeight(i);
        line(0, -35, 0, -2);
    }
    stroke(212, 237, 255);
    strokeWeight(5);
    line(0, -35, 0, -2);
    stroke(194, 194, 194);
    strokeWeight(5);
    line(0, 0, 0, 10);
    popMatrix();
    
    fill(25);
    rect(this.x + (this.xvel/2) + 5, this.y + 15, 5, 10, 5);
    rect(this.x + (this.xvel/2) + 20, this.y + 15, 5, 10, 5);
    
    // Player movement
    if(keys[LEFT] || keys[65]){
        this.dir = 'left';
        this.xvel -= 2;
    }
    if(keys[RIGHT] || keys[68]){
        this.dir = 'right';
        this.xvel += 2;
    }
    if(!keys[LEFT] && !keys[RIGHT] && !keys[65] && !keys[68]){
        this.xvel = 0;
    }
    
    if ((keys[UP] || keys[87]) && !this.jumping) {
        this.yvel -= 10;
        this.jumping = true;
    }
    if(this.xvel > this.speed){
        this.xvel = this.speed;
    }
    if(this.xvel < -this.speed){
        this.xvel = -this.speed;
    }
    
    for(var i in Blocks){
        if(rectCollide(this, Blocks[i]) && this.y < Blocks[i].y + 5){
            this.y = Blocks[i].y - this.h;
            this.yvel = 0;
            this.jumping = false;
        }
    }
    
    this.x += this.xvel;
    this.y += this.yvel;
    
    this.yvel += 0.5;
    
    this.x = constrain(this.x, 0, width - this.w);
};
var player = new Player();

var Fire = function(){
    this.x = random(width);
    this.y = random(350, 500);
    this.trans = 255;
    this.sz = random(15, 30);
    this.xSp = random(-5, 5);
    this.ySp = random(1, 5);
};
Fire.prototype.draw = function() {
    noStroke();
    fill(168, 37, 37, this.trans);
    ellipse(this.x, this.y, this.sz, this.sz);
    strokeWeight(1);
    stroke(255, 255, 255, this.trans / 2);
    arc(this.x, this.y, this.sz - 10, this.sz - 10, 0, 90);
    
    this.trans -= 10;
    this.sz /= 1.06;
    
    this.x += this.xSp;
    this.y -= this.ySp;
};
var Fires = [];

draw = function() {
    for(var i in images){
        if (typeof images[i] !== "object") {
            background(0, 0, 0, 0);
            images[i] = images[i]();
        }
    }
    
    if(scene === 'Home'){
        background(133, 22, 22);
        
        Fires.push(new Fire(), new Fire(), new Fire(), new Fire(), new Fire());
        
        for(var i in Fires){
            Fires[i].draw();
            if(Fires[i].trans < 0){
                Fires.splice(i, 1);
                i--;
            }
        }
        
        noStroke();
        fill(31, 31, 31);
        rect(0, 0, 400, 320);
        fill(255, 0, 0, 10);
        rectMode(CENTER);
        for(var i = 0; i < 70; i += 5){
            rect(200, 320, width, i);
        }
        rectMode(CORNER);
        
        fill(179, 30, 30);
        textSize(64);
        textLeading(50);
        text('OBI RUN\nKENOBI', 200, 200);
        fill(222, 36, 36);
        textSize(60);
        textLeading(50);
        text('OBI RUN\nKENOBI', 200, 200);
    }
    if(scene === 'Game'){
        background(133, 22, 22);
        
        Fires.push(new Fire(), new Fire(), new Fire(), new Fire(), new Fire());
        
        for(var i in Fires){
            Fires[i].draw();
            if(Fires[i].trans < 0){
                Fires.splice(i, 1);
                i--;
            }
        }
        
        image(images.bg, 0, 0);
        
        noStroke();
        fill(255, 0, 0, 10);
        rectMode(CENTER);
        for(var i = 0; i < 70; i += 5){
            rect(200, 320, width, i);
        }
        rectMode(CORNER);
        
        if(frameCount % blockSpacing === 10){
            Blocks.push(new Block(600, 370, width, 30));
        }
        
        for(var i in Blocks){
            Blocks[i].draw();
            if(Blocks[i].x + Blocks[i].w < -600){
                Blocks.splice(i, 1);
                i--;
            }
        }
        
        if(frameCount % 30 === 0 && blockSpacing < 130){ blockSpacing ++; }
        
        player.draw();
    }
};
