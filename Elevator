/**
 * Elevator
 * Chester Banks
 * May 6 2018
*/

/* 
    T A B L E   O F   C O N T E N T S
    
    Text settings
    Key events
    Collision detection function
    Floor graphic
    Images
        Noise texture
        Hotel
        Elevator
    Elevator
        Constructor
        Prototype
        Variable
    Collision boxes
    Person
        Constructor
        Prototype.applyCollisions
        Prototype.draw
        Variable
    Draw function
        Image loading
        Game scene
*/

var scene = 'Menu';

// Text settings
textFont(createFont('Courier'));
textAlign(CENTER, CENTER);

// Mouse properties
var overButton = false;
var clicked = false;

// Key events
var keys = [];
keyPressed = function(){ keys[keyCode] = true; };
keyReleased = function(){ keys[keyCode] = false; };
mouseClicked = function(){
    clicked = true;
};

// The rectangle collision function
var rectCollide = function(one, two){
    // Checks one's right side with two's left side, one's bottom side with two's top, one's left side with two's right side, and one's top side with two's bottom side (in that order).
    return one.x + one.w > two.x &&
        one.y + one.h > two.y &&
        one.x < two.x + two.w &&
        one.y < two.y + two.h;
};

var Floor = function(x, y, type){
    this.Painting = function(colo, shape, x, y, w, h, r){
        pushMatrix();
        translate(x, y);
        rotate(r);
        scale(w / 50, h / 50);
        strokeWeight(1);
        noFill();
        stroke(255);
        triangle(0, 0, 25, -25, 50, 0);
        strokeWeight(5);
        point(25, -25);
        strokeWeight(9);
        stroke(117, 81, 20);
        rect(0, 0, 50, 50);
        strokeWeight(3);
        stroke(156, 112, 36);
        fill(colo);
        rect(0, 0, 50, 50);
        fill(0);
        noStroke();
        if(shape === ':zoomeyes:'){
            for(var i = 0; i < 8; i += 1){
                pushMatrix();
                translate(i - 3, i - 3);
                fill(255, 255, 255, 50);
                ellipse(16, 25, 15, 28);
                ellipse(34, 25, 15, 28);
                fill(25, 25, 25, 100);
                ellipse(13, 29, 7, 14);
                ellipse(31, 29, 7, 14);
                popMatrix();
            }
        }
        if(shape === 'elmt'){
            noStroke();
            fill(247, 179, 102);
            rect(7, 7, 7, 7);
            rect(14, 14, 21, 7);
            rect(35, 7, 7, 7);
            rect(7, 20, 14, 7);
            rect(28, 20, 14, 7);
            rect(7, 20, 7, 14);
            rect(35, 20, 7, 14);
            rect(21, 35, 7, 7);
        }
        if(shape === ':angryCry:'){
            fill(235, 65, 91, 25);
            for(var i = 0; i < 40; i += 3){
                rect(0, 0, 50, i);
            }
            stroke(0);
            strokeWeight(5);
            arc(15, -50, 160, 160, 70, 75);
            arc(15, -50, 160, 160, 85, 90);
            strokeWeight(7);
            point(20, 33);
            point(40, 29);
            strokeWeight(4);
            arc(32, 54, 30, 30, -110, -70);
            noStroke();
            fill(41, 162, 227);
            bezier(15, 35, -4, 63, 38, 62, 15, 35);
            bezier(44, 35, 39, 54, 60, 62, 46, 31);
        }
        popMatrix();
    };
    
    pushMatrix();
    translate(x, y);
    scale(1.0);
    
    noStroke();
    if(type === 0){
        fill(238, 240, 189);
        rect(0, 0, 600, 190);
        fill(255, 255, 255, 100);
        for(var i = 0; i < 600; i += 50){
            rect(i, 0, 10 + random(30), 166);
        }
        fill(209, 110, 88);
        rect(0, 165, 600, 25);
        fill(0, 0, 0, 30);
        rect(0, 181, 600, 3);
        rect(0, 171, 600, 2);
        fill(173, 83, 60);
        rect(0, 190, 600, 10);
    } 
    
    if (type === 1){
        fill(96, 151, 219);
        rect(0, 0, 600, 190);
        stroke(0, 0, 0, 50);
        strokeWeight(1);
        for(var i = -52; i < 600; i += 28){
            line(i + 50, 0, i, 200);
            line(i - 50, 0, i, 200);
        }
        noStroke();
        fill(255, 255, 255);
        rect(0, 165, 600, 25);
        fill(219, 219, 219);
        rect(0, 190, 600, 10);
        for(var i = 0; i < 600; i += 40){
            fill(235);
            rect(i + 20, 165, 19, 7);
            rect(i, 173, 20, 9);
            rect(i + 20, 181, 20, 9);
        }
        this.Painting(color(227, 162, 41), ':angryCry:', 150, 71, 44, 44, 8);
    }
    
    if (type === 2){
        fill(247, 107, 181);
        rect(0, 0, 600, 190);
        fill(143, 53, 105, 50);
        for(var i = -4; i < 600; i += 50){
            for(var j = 18; j < 200; j += 50){
                ellipse(i, j, 20, 20);
                ellipse(i + 25, j + 25, 25, 25);
            }
        }
        fill(209, 58, 116);
        rect(0, 165, 600, 35);
        fill(0, 0, 0, 30);
        rect(0, 181, 600, 3);
        rect(0, 171, 600, 2);
        fill(0, 0, 0, 50);
        rect(0, 192, 600, 8);
        
        this.Painting(color(0, 0, 0), ':zoomeyes:', 64, 60, 33, 22, -11);
        this.Painting(color(255, 255, 255), 'elmt', 440, 71, 44, 44, 8);
    }
    
    noStroke();
    fill(255, 255, 255, 3);
    for(var i = 0; i < 146; i += 5){
        rect(0, 0, 600, i);
    }
    fill(0, 0, 0, 3);
    for(var i = 0; i < 72; i += 5){
        rect(0, 165 - i, 600, i);
    }
    
    popMatrix();
};

var images = {
    'noiseTexture': function(){
        var noiseScale=0.02;

        noStroke();
          for(var x=0; x < width; x+=5) {
              for(var y = 0; y < height; y +=5){
            var noiseVal = noise((x)*noiseScale, 
                                    y*noiseScale);
            fill(0, 0, 0, noiseVal*105);
            rect(x, y, 5, 5);
              }
          }
        
        return get(0, 0, width, height);
    },
    'hotel': function(){
        background(255, 255, 255);
        Floor(0, 0, 2);
        Floor(0, 200, 1);
        Floor(0, 400, 0);
        
        image(images.noiseTexture, 0, 165, 600, 35);
        
        pushMatrix();
        translate(158, 143);
        fill(0, 0, 0, 60);
        ellipse(0, 35 ,50, 10);
        fill(163, 110, 70);
        rect(-30, 3, 10, 30, 5);
        rect(20, 3, 10, 30, 5);
        fill(150, 102, 63);
        rect(-5, 3, 10, 40, 5);
        fill(166, 110, 64);
        ellipse(0, 3, 70, 25);
        fill(207, 139, 83);
        ellipse(0, 0, 70, 20);
        popMatrix();
        
        pushMatrix();
        translate(550, 343);
        scale(0.7, 1.0);
        fill(0, 0, 0, 60);
        ellipse(0, 35 ,50, 10);
        fill(163, 110, 70);
        rect(-30, 3, 10, 30, 5);
        rect(20, 3, 10, 30, 5);
        fill(150, 102, 63);
        rect(-5, 3, 10, 40, 5);
        fill(166, 110, 64);
        ellipse(0, 3, 70, 25);
        fill(207, 139, 83);
        ellipse(0, 0, 70, 20);
        popMatrix();
        
        pushMatrix();
        translate(450, 543);
        fill(0, 0, 0, 30);
        ellipse(0, 35 ,50, 10);
        fill(163, 110, 70);
        rect(-30, 3, 10, 30, 5);
        rect(20, 3, 10, 30, 5);
        fill(150, 102, 63);
        rect(-5, 3, 10, 40, 5);
        fill(166, 110, 64);
        ellipse(0, 3, 70, 25);
        fill(207, 139, 83);
        ellipse(0, 0, 70, 20);
        
        
        // lamp
        noStroke();
        fill(52, 159, 186);
        ellipse(0, -10, 30, 30);
        ellipse(0, -25, 15, 15);
        ellipse(0, -35, 8, 8);
        fill(255, 255, 255, 30);
        ellipse(-3, -12, 20, 20);
        fill(255, 255, 255);
        quad(-10, -60, 10, -60, 15, -35, -15, -35);
        ellipse(0, -35, 30, 10);
        fill(235, 235, 235);
        ellipse(0, -60, 20, 10);
        popMatrix();
        
        return get(0, 0, 600, 600);
    },
    'shaft': function(){
        fill(31, 31, 31);
        rect(225, 0, 150, 600);
        stroke(0, 0, 0, 30);
        for(var i = 0; i < 100; i += 14){
            strokeWeight(i);
            line(300, 0, 300, 600);
        }
        
        return get(0, 0, width, height);
    },
    'hotelBlurred': function(){
        image(images.hotel, 0, 0);
        filter(BLUR, 1.5);
        
        return get(0, 0, 600, 600);
    },
    'elevator': function(){
        pushMatrix();
        translate(75, 20);
        noStroke();
        fill(181, 181, 181);
        rect(-75, 0, 150, 200);
        fill(0, 0, 0, 20);
        for(var i = -62; i < 70; i += 15){
            rect(i, 0, 1, 175);
        }
        fill(54, 54, 54);
        rect(-75, 191, 150, 10);
        rect(-75, 6, 150, 10);
        fill(115, 115, 115);
        rect(-75, 165, 150, 26);
        rect(-75, -20, 150, 26);
        
        noStroke();
        fill(255, 255, 255, 15);
        for(var i = 0; i < 146; i += 5){
            rect(-75, 16, 150, i);
        }
        fill(0, 0, 0, 3);
        for(var i = 0; i < 72; i += 5){
            rect(-75, 187 - i, 149, i);
        }
        
        image(images.noiseTexture, -75, 16, 150, 149);
        
        pushMatrix();
        translate(33, 67);
        for(var i = 0; i < 3; i ++){
            for(var j = 0; j < 5; j ++){
                fill(120, 120, 120);
                ellipse(i * 10, j * 10, 9, 9);
                fill(153, 153, 153);
                ellipse(i * 10, j * 10, 7, 7);
                fill(255);
                textSize(6);
                text(i+j, i * 10, j * 10);
            }
        }
        popMatrix();
        
        
        fill(176, 139, 39);
        rect(-60, 123, 9, 9, 20);
        rect(48, 123, 9, 9, 20);
        fill(222, 176, 49);
        rect(-68, 128, 135, 9, 20);
        fill(255, 255, 255, 100);
        rect(-68, 128, 135, 5, 20);
        popMatrix();
            
        return get(0, 0, 150, 220);
    },
};

var Elevator = function(){
    this.x = 300;
    this.y = 200;
    
    this.destiny = 200;
    this.go = false;
};
Elevator.prototype.draw = function() {
    pushMatrix();
    translate(this.x, this.y);
    
    image(images.elevator, -75, -21);
    
    popMatrix();
    
    
    if(keys[UP] && !this.go){
        this.destiny -= 200;
        this.go = true;
    }
    if(keys[DOWN] && !this.go){
        this.destiny += 200;
        this.go = true;
    }
    if(!keys[UP] && !keys[DOWN]){ this.go = false; }
    
    this.y += (this.destiny - this.y) / 5;
};
var elevator = new Elevator();

var collisionBoxes = [
    {x: elevator.x - 75, y: elevator.y + 180, w: 150, h: 20},
    {x: elevator.x - 75, y: elevator.y + -20, w: 150, h: 20},
    {x: -50, y: 180, w: 275, h: 20},
    {x: 375, y: 180, w: 275, h: 20},
    {x: -50, y: 380, w: 275, h: 20},
    {x: 375, y: 380, w: 275, h: 20},
    {x: -50, y: 580, w: 275, h: 20},
    {x: 375, y: 580, w: 275, h: 20},
];

var Person = function(){
    this.x = -50 + floor(random(2)) * 700;
    this.y = 150 + floor(random(3)) * 200;
    this.w = 30;
    this.h = 30;
    
    this.xvel = this.x < 50 ? 1 : -1;
    
    this.yvel = 0;
};
Person.prototype.applyCollisions = function(xvel, yvel) {
    for (var i = 0; i < collisionBoxes.length; i++) {
        if (!rectCollide(this, collisionBoxes[i])) { continue; }
        if (yvel < 0) {
            this.y = collisionBoxes[i].y + collisionBoxes[i].h;
            this.yvel = 0;
        }
        if (yvel > 0) {
            this.y = collisionBoxes[i].y - this.h;
            this.yvel = 0;
            this.jumping = false;
        }
    }
};
Person.prototype.draw = function() {
    fill(0, 0, 0);
    
    rect(this.x, this.y, this.w, this.h);
    
    this.x += this.xvel;
    this.applyCollisions(this.xvel, 0);
    this.y += this.yvel;
    this.applyCollisions(0, this.yvel);
    this.yvel += 0.6;
};
var People = [];

var myText = function(txt, x, y, sz){
    textSize(sz);
    for(var i = 0; i < txt.length; i ++){
        fill(0);
        if(i % 2 === 0){
            fill(0);
            rect(x + sz + i * sz, y, sz * 1.05, sz * 1.05);
            fill(255, 255, 255);
        }
        text(txt[i], x + (sz * 1.5) + i * sz, y + (sz / 2));
    }
};

var Button = function(x, y, w, h, txt, nxt){
    this.x = x;
    this.y = y;
    this.w = w;
    this.h = h;
    this.txt = txt;
    this.nxt = nxt;
    
    this.plusY = 0;
};
Button.prototype.draw = function() {
    rectMode(CENTER);
    
    fill(0, 0, 0, 30);
    rect(this.x, this.y + 11, this.w - 10, this.h, 10);
    fill(31, 31, 31);
    rect(this.x, this.y + 7, this.w, this.h, 10);
    fill(55 + (this.plusY * 5), 55 + (this.plusY * 5), 55 + (this.plusY * 5));
    rect(this.x, this.y + this.plusY, this.w, this.h, 5);
    
    fill(255, 255, 255);
    textSize(this.h - 30);
    text(this.txt, this.x, this.y + this.plusY);
    
    rectMode(CORNER);
    
    if(mouseX > this.x - this.w / 2 && mouseX < this.x + this.w / 2 && mouseY > this.y - this.h / 2 && mouseY < this.y + this.h / 2){
        overButton = true;
        this.plusY += (6 - this.plusY) / 5;
        if(clicked){
            scene = this.nxt;
        }
    } else {
        this.plusY /= 1.2;
    }
    
    this.plusY = constrain(this.plusY, 0.1, 5.5);
};
var play = new Button(300, 360, 400, 70, 'PLAY', 'Game');
var how = new Button(300, 435, 400, 50, 'HOW', 'Game');
var creds = new Button(300, 500,400, 50, 'CREDITS', 'Game');

draw = function() {
    for(var i in images){
        if(typeof images[i] !== 'object'){
            background(0, 0, 0, 0);
            images[i] = images[i]();
        }
    }
    
    if(scene === 'Menu'){
        background(130, 130, 130);
        textFont(createFont('Trocchi'));
        
        image(images.hotelBlurred, 0, 0);
        
        pushMatrix();
        translate(0, 6);
        fill(255, 255, 255, 100);
        rect(11, 150, 581, 133);
        myText('ELEVATOR', 11, 200, 60);
        myText('CHESTER BANKS', 49, 163, 22);
        popMatrix();
        
        noFill();
        stroke(255, 255, 255);
        strokeWeight(3);
        rect(10, 10, 580, 580);
        strokeWeight(1);
        rect(4, 5, 591, 590);
        
        noStroke();
        play.draw();
        how.draw();
        creds.draw();
    }
    if(scene === 'Game'){
        image(images.hotel, 0, 0);
        image(images.shaft, 0, 0);
        
        noFill();
        stroke(255);
        strokeWeight(2);
        ellipse(203, 29, 27, 28);
        ellipse(201, 429, 27, 28);
        ellipse(474, 227, 27, 28);
        noStroke();
        fill(255);
        ellipse(203, 29, 20, 20);
        ellipse(201, 429, 20, 20);
        ellipse(474, 227, 20, 20);
        
        fill(0, 0, 0);
        textSize(21);
        text('FLOOR 3', 165, 28);
        text('FLOOR 2', 436, 226);
        text('FLOOR 1', 163, 427);
        
        
        elevator.draw();
        
        collisionBoxes[0] = {x: elevator.x - 75, y: elevator.y + 180, w: 150, h: 20};
        collisionBoxes[1] = {x: elevator.x - 75, y: elevator.y + -20, w: 150, h: 20};
        
        if(frameCount % 100 === 0){
            People.push(new Person());
        }
        for(var i = People.length - 1; i >= 0; i --){
            People[i].draw();
        }
    }
    
    cursor(overButton ? 'pointer' : 'default');
    
    overButton = false;
    clicked = false;
};
